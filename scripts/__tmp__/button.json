{
  "name": "button",
  "dependencies": [],
  "registryDependencies": [],
  "file": {
    "name": "button.tsx",
    "content": "import { type Assign, ark } from '@ark-ui/react'\n\n\n\nimport { cn } from '<%= aliases.utilities %>/cn'\n\nimport { type VariantProps, tv } from '<%= aliases.utilities %>/tv'\n\n//---------------------------------\n// Variants\n//---------------------------------\n\nconst buttonVariants = tv({\n  base: [\n    [\n      'isolate inline-flex cursor-pointer select-none items-center justify-center whitespace-nowrap rounded-xl font-sans font-semibold tracking-normal',\n      'not-disabled:inset-ring-1 disabled:cursor-not-allowed disabled:bg-fill-1 disabled:text-disabled',\n      'transition-colors ease-out-quad',\n    ],\n  ],\n  variants: {\n    variant: {\n      primary: ['bg-brand text-fg-2', 'not-disabled:hover:bg-brand/90'],\n      secondary: [\n        'inset-ring-border bg-surface-2 text-fg-1',\n        'not-disabled:hover:bg-fill-2',\n      ],\n      ghost: [\n        'bg-transparent text-brand transition-[color_box-shadow]',\n        'not-disabled:hover:inset-ring-2 not-disabled:hover:text-brand/90',\n      ],\n      destructive: [\n        'inset-ring-transparent bg-danger text-fg-2',\n        'not-disabled:hover:bg-danger/90',\n      ],\n    },\n    size: {\n      sm: 'h-9 gap-1 px-3 text-sm/5.5 [&_svg]:size-5',\n      md: 'h-11 gap-2 px-4 text-base [&_svg]:size-6',\n      lg: 'h-11 px-4 text-lg/7 [&_svg]:size-7',\n      xl: 'h-14 px-6 text-xl/8 [&_svg]:size-8',\n    },\n    iconOnly: {\n      true: 'aspect-square px-0',\n    },\n  },\n  compoundVariants: [\n    {\n      variant: ['primary', 'ghost'],\n      className: 'inset-ring-brand',\n    },\n    {\n      size: ['lg', 'xl'],\n      className: 'gap-3',\n    },\n  ],\n  defaultVariants: {\n    variant: 'primary',\n    size: 'md',\n    iconOnly: false,\n  },\n})\n\n//---------------------------------\n// Types\n//---------------------------------\n\ntype ButtonProps = Assign<\n  React.CustomComponentPropsWithRef<typeof ark.button>,\n  VariantProps<typeof buttonVariants>\n>\n\n//---------------------------------\n// Button\n//---------------------------------\n\nfunction Button({ className, variant, size, iconOnly, ...props }: ButtonProps) {\n  return (\n    <ark.button\n      {...props}\n      className={cn(\n        buttonVariants({\n          className,\n          variant,\n          size,\n          iconOnly,\n        }),\n      )}\n      data-scope=\"button\"\n      data-focusable\n    />\n  )\n}\n\n//---------------------------------\n// Exports\n//---------------------------------\n\nexport { Button, buttonVariants }\nexport type { ButtonProps }\n"
  }
}